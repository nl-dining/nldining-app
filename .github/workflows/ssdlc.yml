name: Testing Github actions

on:
  pull_request:
    branches: [ master ]

jobs:
  detekt:
    runs-on: ubuntu-latest
    continue-on-error: true

    steps:
      - name: "checkout"
        uses: actions/checkout@v2

      - name: "detekt"
        uses: natiginfo/action-detekt-all@1.23.8

  android-lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 1
      - name: Change wrapper permissions
        run: chmod +x ./app/gradlew
      - name: set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: jetbrains
          java-version: 21
          cache: gradle

      - run: ./app/gradlew lint
      - uses: yutailang0119/action-android-lint@v4
        with:
          report-path: build/reports/*.xml # Support glob patterns by https://www.npmjs.com/package/@actions/glob
          ignore-warnings: true # Ignore Lint Warnings
        continue-on-error: false # If annotations contain error of severity, action-android-lint exit 1.

  unittests:
    name: running unittests
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin' # See 'Supported distributions' for available options
          java-version: '21'
      - name: Print Java version
        run: javac -version
      - name: Change wrapper permissions
        run: chmod +x ./app/gradlew
      - name: Restore Cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Run Debug Tests
        run: ./app/gradlew testDebugUnitTest

      - name: Upload Test Reports
        if: ${{ always() }}
        uses: actions/upload-artifact@v4
        with:
          name: test-reports
          path: '**/build/reports/tests/'

  scan:
    name: gitleaks
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: gitleaks/gitleaks-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITLEAKS_LICENSE: ${{ secrets.GITLEAKS_LICENSE }} # Only required for Organizations, not personal accounts.

  build-apk:
    name: Build APK
    runs-on: ubuntu-latest
    needs: [unittests, android-lint, scan]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 21

      - name: Grant permission to execute Gradle
        run: chmod +x ./app/gradlew

      - name: Build Debug APK
        run: ./app/gradlew assembleDebug

      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: app-debug-apk
          path: app/build/outputs/apk/debug/app-debug.apk
